package com.taotao.search.service.impl;

import org.apache.solr.client.solrj.SolrQuery;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.taotao.common.pojo.QuerySolrResult;
import com.taotao.search.dao.SearchItemDaoImpl;
import com.taotao.search.service.SearchItemService;

@Service
public class SearchItemServiceImpl implements SearchItemService {
	@Autowired
	SearchItemDaoImpl searchItemServiceImpl;

	@Override
	public QuerySolrResult querySolrResult(String queryString, Integer page, Integer rows) throws Exception {
		// 获得查询对象solrQuery
		SolrQuery solrQuery = new SolrQuery();
		// 添加查询条件 q
		solrQuery.setQuery(queryString);
		// 过滤信息 FilterQuery

		// 分页信息SortField
		if (page == null)
			page = 1;
		// 起始页 当前页-1 * 每页条数
		Integer start = (page - 1) * rows;
		solrQuery.setStart(start);
		solrQuery.setRows(rows);
		// 排序
		/* solrQuery.setSort(field, order) */
		// 显示过滤 FieldList 这里不过滤

		// 默认搜索域DefaultField
		solrQuery.set("df", "item_keywords");
		// 高亮显示
		solrQuery.setHighlight(true);
		solrQuery.addHighlightField("item_title");
		solrQuery.setHighlightSimplePre("<font class=\"skcolor_ljg\">");
		solrQuery.setHighlightSimplePost("</font>");
		QuerySolrResult querySolrResult = searchItemServiceImpl.querySolrResult(solrQuery);
		// 补全querySolrResult信息(总记录数在dao层获得)
		Long totalRecord = querySolrResult.getTotalRecord();
		Long totalPage = totalRecord % rows == 0? totalRecord / rows : totalRecord / rows + 1;
		querySolrResult.setTotalPage(totalPage);
		return querySolrResult;
	}

}
